openapi: 3.0.0
info:
  title: Jobs
  contact: {}
  version: '1.0'
servers:
- url: https://jobsapi-cvk9.onrender.com/api/v1
  variables: {}
paths:
  /login:
    post:
      tags:
      - auth
      summary: login
      operationId: login
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/loginrequest'
              - example:
                  Email: ''
                  Password: ''
            example:
              Email: ''
              Password: ''
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /register:
    post:
      tags:
      - auth
      summary: register
      operationId: register
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/registerrequest'
              - example:
                  username: ''
                  Email: ''
                  Password: ''
            example:
              username: ''
              Email: ''
              Password: ''
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /:
    get:
      tags:
      - jobs
      summary: getalljobs
      operationId: getalljobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    post:
      tags:
      - jobs
      summary: createjob
      operationId: createjob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/createjobrequest'
              - example:
                  companyname: TCS
                  position: QA
                  status: pending
            example:
              companyname: TCS
              position: QA
              status: pending
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /{id}:
    patch:
      tags:
      - jobs
      summary: updatejob
      operationId: updatejob
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: 6664d02a39e4ea4663727542
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/updatejobrequest'
              - example:
                  companyname: Innover
                  position: datascientist
            example:
              companyname: Innover
              position: datascientist
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    delete:
      tags:
      - jobs
      summary: deletejob
      operationId: deletejob
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: 6664d02a39e4ea4663727542
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    get:
      tags:
      - jobs
      summary: getjobbyid
      operationId: getjobbyid
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: 6664d02a39e4ea4663727542
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    loginrequest:
      title: loginrequest
      required:
      - Email
      - Password
      type: object
      properties:
        Email:
          type: string
        Password:
          type: string
      example:
        Email: ''
        Password: ''
    registerrequest:
      title: registerrequest
      required:
      - username
      - Email
      - Password
      type: object
      properties:
        username:
          type: string
        Email:
          type: string
        Password:
          type: string
      example:
        username: ''
        Email: ''
        Password: ''
    createjobrequest:
      title: createjobrequest
      required:
      - companyname
      - position
      - status
      type: object
      properties:
        companyname:
          type: string
        position:
          type: string
        status:
          type: string
      example:
        companyname: TCS
        position: QA
        status: pending
    updatejobrequest:
      title: updatejobrequest
      required:
      - companyname
      - position
      type: object
      properties:
        companyname:
          type: string
        position:
          type: string
      example:
        companyname: Innover
        position: datascientist
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: auth
  description: ''
- name: jobs
  description: ''